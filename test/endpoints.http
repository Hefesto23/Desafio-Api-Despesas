### ============================================
### 游눠 COMO USAR:
### 1. Instale a extens칚o "REST Client" no VS Code
### 2. Abra este arquivo
### 3. Execute PRIMEIRO o login (#1) para capturar o token automaticamente
### 4. Os pr칩ximos requests usar칚o o token automaticamente
### ============================================

### Vari치veis
@baseUrl = http://localhost:3000
@contentType = application/json

@token = {{login.response.body.access_token}}
// Vari치vel global para o token de autentica칞칚o

### ============================================
### 游댏 HEALTH CHECK
### ============================================

### 0. GET / - Endpoint raiz (Hello World)
GET {{baseUrl}}/

### 0.1 GET /health - Verifica칞칚o de sa칰de da API
GET {{baseUrl}}/health

### ============================================
### 游댏 AUTENTICA칂츾O (EXECUTE PRIMEIRO!)
### ============================================

### 1. Login com credenciais corretas
# @name login
POST {{baseUrl}}/auth/login
Content-Type: {{contentType}}

{
  "email": "admin@expenses.com",
  "password": "admin123"
}

### 2. Login com email inv치lido
POST {{baseUrl}}/auth/login
Content-Type: {{contentType}}

{
  "email": "wrong@email.com",
  "password": "admin123"
}

### 3. Login com senha inv치lida
POST {{baseUrl}}/auth/login
Content-Type: {{contentType}}

{
  "email": "admin@expenses.com",
  "password": "senhaerrada"
}

### 4. Login com dados inv치lidos (valida칞칚o)
POST {{baseUrl}}/auth/login
Content-Type: {{contentType}}

{
  "email": "email-invalido",
  "password": "123"
}

### 5. Login sem dados
POST {{baseUrl}}/auth/login
Content-Type: {{contentType}}

{}

### ============================================
### 游눯 DESPESAS - ENDPOINTS P칔BLICOS (sem token)
### ============================================

### 6. GET /despesas - Listar todas as despesas
GET {{baseUrl}}/despesas

### 7. GET /despesas - Filtrar por m칡s e ano
GET {{baseUrl}}/despesas?mes=01

### 8. GET /despesas - Filtrar por categoria
GET {{baseUrl}}/despesas?categoria=LAZER

### 9. GET /despesas - Filtros combinados
GET {{baseUrl}}/despesas?mes=05&ano=2024&categoria=LAZER
### Exemplo de filtro combinado
GET {{baseUrl}}/despesas?mes=01&ano=2021
### 10. GET /despesas/estatisticas - Estat칤sticas gerais
GET {{baseUrl}}/despesas/estatisticas

### 11. GET /despesas/estatisticas - Estat칤sticas filtradas
GET {{baseUrl}}/despesas/estatisticas?mes=05&ano=2025

### 12. GET /despesas/:id - Buscar despesa por ID (use um ID do seed)
GET {{baseUrl}}/despesas/550e8400-e29b-41d4-a716-446655440001

### 13. GET /despesas/:id - Buscar com ID inv치lido (teste de erro)
GET {{baseUrl}}/despesas/id-invalido

### 14. GET /despesas/:id - Buscar ID inexistente
GET {{baseUrl}}/despesas/550e8400-e29b-41d4-a716-999999999999

### ============================================
### 游눯 DESPESAS - ENDPOINTS PROTEGIDOS (USA TOKEN AUTOMATICAMENTE)
### ============================================

### 15. POST /despesas - Criar nova despesa (USA TOKEN AUTOM츼TICO)
POST {{baseUrl}}/despesas
Content-Type: {{contentType}}
Authorization: Bearer {{token}}

{
  "title": "Caneta Azul",
  "amount": 5.90,
  "category": "OUTROS",
  "date": "2025-05-28"
}

### 16. POST /despesas - Criar despesa com dados inv치lidos
POST {{baseUrl}}/despesas
Content-Type: {{contentType}}
Authorization: Bearer {{token}}

{
  "title": "",
  "amount": -10.50,
  "category": "CATEGORIA_INEXISTENTE",
  "date": "data-invalida"
}

### 17. POST /despesas - Criar despesa sem token (deve dar erro 401)
POST {{baseUrl}}/despesas
Content-Type: {{contentType}}

{
  "title": "Teste sem token",
  "amount": 25.00,
  "category": "OUTROS",
  "date": "2025-05-28"
}

### 18. PATCH /despesas/:id - Atualizar despesa (USA TOKEN AUTOM츼TICO)
PATCH {{baseUrl}}/despesas/550e8400-e29b-41d4-a716-446655440002
Content-Type: {{contentType}}
Authorization: Bearer {{token}}

{
  "title": "Encher o tanque Gasolina ",
  "amount": 180.00
}

### 19. PATCH /despesas/:id - Atualizar apenas a categoria
PATCH {{baseUrl}}/despesas/550e8400-e29b-41d4-a716-446655440002
Content-Type: {{contentType}}
Authorization: Bearer {{token}}

{
  "category": "OUTROS"
}

### 20. PATCH /despesas/:id - Atualizar despesa inexistente
PATCH {{baseUrl}}/despesas/550e8400-e29b-41d4-a716-999999999999
Content-Type: {{contentType}}
Authorization: Bearer {{token}}

{
  "title": "Despesa que n칚o existe"
}

### 21. PATCH /despesas/:id - Atualizar sem token (deve dar erro 401)
PATCH {{baseUrl}}/despesas/550e8400-e29b-41d4-a716-446655440001
Content-Type: {{contentType}}

{
  "title": "Tentativa sem token"
}

### 22. DELETE /despesas/:id - Excluir despesa (USA TOKEN AUTOM츼TICO)
DELETE {{baseUrl}}/despesas/550e8400-e29b-41d4-a716-446655440005
Authorization: Bearer {{token}}

### 23. DELETE /despesas/:id - Excluir despesa inexistente
DELETE {{baseUrl}}/despesas/550e8400-e29b-41d4-a716-999999999999
Authorization: Bearer {{token}}

### 24. DELETE /despesas/:id - Excluir sem token (deve dar erro 401)
DELETE {{baseUrl}}/despesas/550e8400-e29b-41d4-a716-446655440004

### ============================================
### 游빍 TESTES DE VALIDA칂츾O
### ============================================

### 25. POST /despesas - Teste com valor muito alto
POST {{baseUrl}}/despesas
Content-Type: {{contentType}}
Authorization: Bearer {{token}}

{
  "title": "Compra cara",
  "amount": 99999999.99,
  "category": "OUTROS",
  "date": "2025-05-28"
}

### 26. GET /despesas - Teste com filtros inv치lidos
GET {{baseUrl}}/despesas?mes=13&ano=abcd&categoria=INEXISTENTE

### 27. POST /despesas - Teste com todos os campos v치lidos
POST {{baseUrl}}/despesas
Content-Type: {{contentType}}
Authorization: Bearer {{token}}

{
  "title": "Academia - Mensalidade",
  "amount": 89.90,
  "category": "SAUDE",
  "date": "2025-05-01"
}
